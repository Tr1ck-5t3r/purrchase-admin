<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
      /* General Styles */
      body {
          font-family: 'Arial', sans-serif;
          background-color: #f8f9fa;
          margin: 0;
          padding: 20px;
          display: flex;
          justify-content: center;
          align-items: center;
          min-height: 100vh; /* Use min-height for flexibility */
          box-sizing: border-box; /* Include padding in body calculations */
      }

      /* Apply box-sizing globally */
      *, *::before, *::after {
          box-sizing: inherit;
      }

      /* Common Container Style - Not used on this specific page, but kept for reference */
      /*
      .container {
          background: white;
          padding: 20px;
          border-radius: 8px;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          text-align: center;
          width: 100%;
          max-width: 800px;
      }
      */

      /* Headings */
      h2 {
          margin-top: 0; /* Remove default top margin */
          margin-bottom: 25px; /* Increased bottom margin */
          color: #333;
          font-size: 1.8em; /* Slightly larger heading */
      }

      /* Tables - Not used on this specific page */
      /*
      table {
          width: 100%;
          border-collapse: collapse;
          background: #fff;
      }

      th, td {
          padding: 12px;
          border-bottom: 1px solid #ddd;
          text-align: center;
      }

      th {
          background-color: #007bff;
          color: white;
      }
      */

      /* General Form Styles (Inputs, Selects, etc.) */
      input, select, textarea {
          width: 100%;
          padding: 12px; /* Slightly more padding */
          margin-bottom: 18px; /* Adjusted spacing */
          border: 1px solid #ccc;
          border-radius: 5px;
          font-size: 16px;
          box-sizing: border-box; /* Crucial for width: 100% */
      }

      select {
          background-color: #fff;
          cursor: pointer;
      }

      textarea {
          resize: vertical;
          min-height: 80px;
      }

      input[type="file"] {
          border: none;
          padding-left: 0; /* Adjust padding for file input if needed */
      }

      /* General Button Styles */
      button {
          width: 100%;
          padding: 12px;
          background-color: #28a745;
          color: white;
          border: none;
          border-radius: 5px;
          font-size: 18px;
          cursor: pointer;
          transition: background-color 0.3s ease;
          box-sizing: border-box; /* Include padding/border in width */
      }

      button:hover {
          background-color: #218838;
      }

      /* Dashboard Styles - Not used on this specific page */
      /*
      .dashboard-container { ... }
      .dashboard-header { ... }
      .dashboard-content h3 { ... }
      .dashboard-content p { ... }
      .dashboard-links { ... }
      .btn { ... }
      .btn:hover { ... }
      .logout-btn { ... }
      .logout-btn:hover { ... }
      */

      /* Login Specific Styles */
      .login-container {
          background: white;
          padding: 30px; /* Increased padding */
          border-radius: 8px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* Slightly stronger shadow */
          text-align: center;
          width: 100%;
          max-width: 380px; /* Slightly wider */
      }

      /* Style inputs specifically within the login container if needed */
      .login-container input[type="text"],
      .login-container input[type="password"] {
          /* Add specific styles here if different from general input */
          /* Example: margin-bottom: 20px; */
      }

      /* Error Message */
      .error-message {
          color: #dc3545; /* Standard Bootstrap danger color */
          font-size: 14px;
          margin-top: -10px; /* Pull up slightly below the password field */
          margin-bottom: 15px; /* Space before the button */
          min-height: 1.2em; /* Reserve space even when empty */
          text-align: left; /* Align text to the left */
          padding-left: 5px; /* Small indent */
      }

      /* Style button specifically within the login container if needed */
      .login-container button {
         margin-top: 10px; /* Add some space above the button */
      }

      /* Delete Button & Pet Image - Not used on this page */
      /*
      .delete-btn { ... }
      .delete-btn:hover { ... }
      .pet-img { ... }
      */

      /* Responsive Design */
      @media (max-width: 600px) {
          body {
              padding: 10px; /* Reduce padding on small screens */
          }
          .login-container {
              width: 95%; /* Allow slightly more width */
              padding: 20px; /* Reduce padding */
              max-width: none; /* Let it fill the width */
          }
          h2 {
              font-size: 1.6em;
          }
      }

    </style>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Check sessionStorage, not localStorage, if you want session-only persistence
        if (sessionStorage.getItem("user")) {
          // Make sure the path is correct for your setup
          window.location.href = "/dashboard"; // Redirect if already logged in
        }
      });

      async function handleLogin(event) {
        event.preventDefault(); // Prevent default form submission

        const usernameInput = document.getElementById("username");
        const passwordInput = document.getElementById("password");
        const errorElement = document.getElementById("error");

        const username = usernameInput.value;
        const password = passwordInput.value;

        // Basic client-side validation (optional)
        if (!username || !password) {
            errorElement.innerText = "Please enter both username and password.";
            return;
        }

        errorElement.innerText = ""; // Clear previous errors

        try {
            const response = await fetch("/login", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ username, password })
            });

            // Check if response is ok (status 200-299) and content-type is JSON
            if (!response.ok) {
                // Try to parse error message from server if possible
                let errorMessage = `Login failed. Server responded with status: ${response.status}`;
                try {
                    const errorResult = await response.json();
                    errorMessage = errorResult.message || errorMessage; // Use server message if available
                } catch (e) {
                    // Ignore if response body is not JSON or empty
                }
                throw new Error(errorMessage);
            }

            const result = await response.json();

            if (result.success && result.username) { // Check for success and username
              sessionStorage.setItem("user", result.username); // Store user session
              window.location.href = "/dashboard"; // Redirect to dashboard
            } else {
              // Use message from server response if available, otherwise generic
              errorElement.innerText = result.message || "Invalid credentials! Try again.";
            }
        } catch (error) {
            console.error("Login error:", error);
            // Display network or other errors
            errorElement.innerText = error.message || "An error occurred during login. Please try again.";
        }
      }
    </script>
</head>
<body>
    <div class="login-container">
        <h2>Admin Login</h2>
        <!-- Added novalidate because we handle validation in JS -->
        <form onsubmit="handleLogin(event)" novalidate>
            <input type="text" id="username" name="username" placeholder="Username" required aria-label="Username">
            <input type="password" id="password" name="password" placeholder="Password" required aria-label="Password">
            <!-- Error message paragraph -->
            <p id="error" class="error-message"></p>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>